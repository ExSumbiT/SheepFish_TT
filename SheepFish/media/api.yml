openapi: 3.0.3
info:
  title: Jrachka TOP - OpenAPI 3.0
  version: 0.0.1
tags:
  - name: checks
    description: methods for work with printers and checks
paths:
  /order:
    post:
      tags:
        - checks
      summary: Post a new order
      operationId: post_order
      requestBody:
        description: Order info
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ok"
        "400":
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
              examples:
                checks:
                  summary: Example with created checks
                  value:
                    message: Checks already exist for this order
                printers:
                  summary: Example with point without printers
                  value:
                    message: No printers found for this point
  /checks/{key}:
    get:
      tags:
        - checks
      summary: Get checks for printer by key
      description: Return rendered checks for printer by unique printer api-key
      operationId: getChecksforPrinter
      parameters:
        - name: key
          in: path
          description: Printer api-key
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Check"
  /print/{number}:
    post:
      tags:
        - checks
      summary: Print check
      description: Change check status to "printed"
      operationId: print_check
      parameters:
        - name: number
          in: path
          description: Check number
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Ok"
components:
  schemas:
    Ok:
      type: object
      properties:
        message:
          type: string
          example: ok
      xml:
        name: ok
    Error:
      type: object
      properties:
        message:
          type: string
      xml:
        name: error
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        point_id:
          type: integer
          format: int64
          example: 123
        comment:
          type: string
          example: example comment
        kitchen_comment:
          type: string
          example: example kitchen comment
        time:
          type: string
          format: date-time
        info:
          type: array
          xml:
            wrapped: true
          items:
            type: object
            properties:
              name:
                type: string
              price:
                type: integer
                format: float
              number:
                type: integer
                format: int64
          example:
            - name: dish 1
              price: 12.5
              number: 1
            - name: dish 2
              price: 15.1
              number: 2
      xml:
        name: order
    Check:
      type: object
      properties:
        id:
          type: integer
          format: int64
        api_key:
          type: string
        type:
          type: string
        status:
          type: string
        pdf_file:
          type: string
      xml:
        name: customer
